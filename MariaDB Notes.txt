Yum Install

	normally, you'd log in as "root" and doa "yum install mariadb"

	However we'll need to add a non-standard Yum Repository to our list to access it.

	https://mariadb.com/kb/en/mariadb/yum/



Create a yum repo for the MariaDB RPMs for your version:

vi /etc/yum.repos.d/MariaDB.repo
nano /etc/yum.repos.d/MariaDB.repo

[mariadb]
name = MariaDB-10.1.11
baseurl=https://downloads.mariadb.com/files/MariaDB/mariadb-10.1.11/yum/rhel6-amd64/
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1

yum install MariaDB-server MariaDB-client



backup the MariaDB.repo:
cp /etc/yum.repos.d/MariaDB.repo /root


To do the upgrade:
1. Modify the repo to reflect the updated version

[mariadb]
name = MariaDB-10.1.14
baseurl=https://downloads.mariadb.com/files/MariaDB/mariadb-10.1.14/yum/rhel6-amd64/
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1

Then run the update command:
yum update MariaDB-server MariaDB-client


Do the downgrade:

Replace the newer Repo file with the older one

[mariadb]
name = MariaDB-10.1.11
baseurl=https://downloads.mariadb.com/files/MariaDB/mariadb-10.1.11/yum/rhel6-amd64/
gpgkey=https://yum.mariadb.org/RPM-GPG-KEY-MariaDB
gpgcheck=1


Uninstall the current version
yum remove MariaDB-server MariaDB-client

#Clean out the cached metadata for the repo
yum clean metadata

Re-install the MariaDB (verify the version number is correct before you say "y"!)

yum install MariaDB-server MariaDB-client

Lunch until 2pm Eastern, unless you have connectivity wrinkles to iron out, 
in which case come back 10 minutes early


We're currently working on installing MariaDB server and client from the directions above
If you don't have a virtual machine called "MariaDB" - if you only have "default" - let me know.
Everyone should have had it, but it's possible I missed one like Jag's.

We're just making sure at the end of this that you have a version of MariaDB installed




Checking processes:

# List all processes
ps -ef 

# Find all commands with "mysql"
ps -ef | grep mysql


#Find all "Services"
chkconfig

# Find all "mysql" services
chkconfig | grep mysql

Runlevels 0-6
Runlevel 3 is the normal default for a non-graphical server (multi-user with networking)
Runlevel 5 is the normal default for a graphical server (multi-user with networking and X11 Graphics)

chkconfig is telling you whether our service is on in a given runlevel
We only care that mysql is "on" for runlevel 3

If it's "3:on", it will start on the next reboot to runlevel 3

We can start it right now by using the init script's "start" command:

/etc/init.d/mysql start

We can ask it to shutdown (without downing the Linux server) by issuing the init's "stop" command:

/etc/init.d/mysql stop

We can also ask it to do a quick stop-start restart:

/etc/init.d/mysql restart

ps xgau | grep ^mysql will find all processes owned by the "mysql" unix user
In "mysqld", the "d" stands for "daemon", or a Unix background process
The "pid-file" is the process-id, so other programs and scripts can find this process easily

UserId	PID			Command with arguments
mysql	2444	..........	/usr/sbin/mysqld --basedir=/usr --datadir=/var/lib/mysql.... 


mysql command-line client
We have 2 Unix userIds - root and mysql
Unix UserIds have nothing to do with Database 

mysql_secure_installation
	Set the mysql root user's password, accept all of the other defaults

Now log in to the new-secure server:

mysql -u root -p

within the mysql client:

mysql> show databases;

should show 3 databases (or "schema"):
information_schema
mysql
performance_schema

Change the current working DB to mysql (which is like the System schema in other products):
mysql> use mysql;

mysql> show tables;

Create a new non-mysql-internal database;
mysql> create database weasley;

Now go use the newly-created weasley DB
mysql> use weasley;

No tables in the newly created databases
mysql> show tables;

mysql> create table Customer (
	-> customerId int auto_increment primary key,
	-> firstName varchar(40),
	-> lastName varchar(40),
	-> email varchar(80)
	-> );

mysql> insert into Customer (firstName, lastName, email) values ("Harry", "Potter", "harry@hogwarts.ac.uk");
mysql> insert into Customer (firstName, lastName, email) values ("Ron", "Weasley", "ron@hogwarts.ac.uk");
mysql> select * from Customer;




Create a MySQL user

create user foo identified by "Pa$$w0rd" 
grant all on *.* to "foo"@"%" with grant option  


Use the notes above to

0. Start the mysqld service if necessary (/etc/init.d/mysql start)
1. Run the mysql_secure_installation
2. Create a "normal" database
3. Create a table in that database
4. Insert a couple of records in that database

We'll come back at about 5:20, press forward, then leave the remainder of 
time for folks to catch up on anything they didn't earlier.

You're also welcome to do it early in the morning as well if you need to 
leave soon.











Alternative installation directories



