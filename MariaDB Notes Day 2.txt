Notes - Day 2

We'll get started in about 2 minutes. Waiting for some folks to finishing logging in.

Grab a quick cuppa.

Added a MariaDB.repo in /etc/yum.repos.d/
yum install MariaDB Server & Client
Optional up & down -grades
	(Not data and not config files)
	(Not the process - do a /etc/init.d/mysql stop, then backup, then test the backup, then the upgrade, then /etc/init.d/mysql start)

Up for today
	Files, log files, etc.
	Alternate installations
	Security (just a bit more)
	Backends (MyISAM, InnoDB, Aria, XtraDB, Memory, TokuDB, ScaleDB, ...)
	Backups / Cloning
	

cHARSETS (AT SOME POINT throughout the course)



Compiled installation (self-compiled from source)
	=> /usr/local/mysql
		.../bin = binary executables and scripts 
		.../logs = runtime logs
		.../data = all of your data, including caches
		.../lib = shared libraries (including plugins)
		.../conf | .../etc = your my.cnf file (but self-chosen)
		.../include = headers for compilation
		.../share | .../man = manual pages and support text files
		.../scripts 
		.../support-files = sample my.cnf files and more

Default "yum" installation:
	Special "configure" script customized version for RHEL/CentOS
		
		.../bin => /usr/bin
		.../logs => /var/lib/mysql
		.../data => /var/lib/mysql
		.../lib => /usr/lib/mysql or /usr/lib64/mysql depending on platform
		.../conf | .../etc = /etc/my.cnf (and /etc/my.cnf.d/ )
		.../include => /usr/include 
		.../share | .../man => /usr/share, /usr/share/man

	To alter yum-compiled-in defaults, either:
		modify my.cnf file 
		use command-line options
		modify the /etc/init.d/mysql script

	10.1.11
	10 -> Major version
	1 -> Minor version
	11 -> Patch level


	root -> /usr/bin/mysqld_safe ... (a wrapper to runas mysql)
		sudo as mysql user -> /usr/sbin/mysqld ...
		(originally executed from /etc/init.d/mysql start)
		(which is more easily invoked as "service start")

		(remember, we can do "/etc/init.d/mysql stop" == "service mysql stop"
			or "/etc/init.d/mysql restart" == "service mysql restart")

	Table names (and sometimes field names) may be case sensitive
	Depending on storage backend, filing system type, and config options!

	User & Host are a tuple (combination pair)
		calvin@localhost	password: foobar	(all privs)
		calvin@www.foo.com	password: barfoo	(restricted)
	treated as if they were two completely different users

		% = wildcard (good idea to not use this for hosts)
	
	
192.168.4.7
192.0.0.0 = 192.0.0.0/255.0.0.0 => address must start with 192
192.168.0.0 = 192.168.0.0/255.255.0.0 => address must start with 192.168...

user@host
	host can be 

calvinvette @ %.cvs.com
calvinvette @ 192.168.0.0/255.255.0.0
localhost == 127.0.0.1

create user 'testuser'@'%corp.cvs.com'
HOST and USER is Primary Key in the mysql.user table


appUser@192.168.4.11	password: foobar11
appUser@192.168.4.12	password: foobar12



Places to change compiled-in defaults:
configured/compiled-in options < /etc/init.d/mysql < my.cnf < command-line options


Migrate to a more "segregated" mysql data directory structure

1. Stop the mysql server
	service mysql stop

2. mkdir /mariadb_runtime

3. Make a "data", "logs", and "run" directories in it
	cd /mariadb_runtime
	mkdir data
	mkdir logs
	mkdir run

4. Move the data, log and pid files
	mv /var/lib/mysql/* data
	mv data/*.pid run	# Should be "file not found" if server is off
	mv data/*log* data/*.err logs

5. Change ownership to mysql user
	chown -R mysql:mysql /mariadb_runtime

Take a quick break then do these steps until 12:45 Eastern - we'll
finish them off real quick then go to lunch. Sorry!


Tweak the my.cnf file

http://dev.mysql.com/doc/refman/5.7/en/option-files.html
http://dev.mysql.com/doc/refman/5.7/en/mysql-install-db.html

	my.cnf (and included files) need to NOT be world-writeable
	chmod to 755 if necessary (u+rwx, g+rx, o+rx)


Modify the /etc/my.cnf.d/servers.cnf [mysqld] section to include the 
new location

	;basedir=/usr
	;basedir=/opt/mariadb

	[mysqld]
		# applies just to server
		; user = mysql
		datadir = /mariadb_runtime/data
		log-error = /mariadb_runtime/logs/mariadb.error.log
		pid-file = /mariadb_runtime/run/mariadb.pid
		socket = /mariadb_runtime/run/mariadb.sock
		bind-address = 0.0.0.0	# bind to all IP address on this system
				
	[mysql]
		; applies just to mysql client

Add the PID file, socket, and bind-addres in your config file the 
stop and restart the server
Try using tail -f to watch the log file in real time in a different 
VC window (before restarting):

tail -f /mariadb_runtime/logs/mariadb.error.log
(In CentOS/RHEL console, use alt-left-arrow and alt-right-arrow to switch
between virtual console screens, or alt-F# to select a console 1-6)

For now, launch the server with mysqld_safe:

	mysqld_safe &

To stop, use
/etc/init.d/mysql stop
OR
service mysql stop
OR (progressively):
kill -HUP $pid	= "Please shut down now"
kill $pid	= "Shut down now"
kill -KILL $pid	= "Terminate with extreme prejudice"




yum install git

(Using it for "DevOps" for my.cnf and related files...)

cd /etc
git init
git add my.cnf my.cnf.d/ rc.d/init.d/mysql
git commit -m "20160628@15.42 Pre-segregation config files"

my_print_defaults -c /etc/my.cnf mysqld
my_print_defaults -c /etc/my.stage.cnf mysqld
my_print_defaults -c /etc/my.test.cnf mysqld




Optional: Isolate the MariaDB programs to /opt/mysql:

Now uninstall MariaDB client and server

	yum remove MariaDB-server MariaDB-client

Upgrade repo file if necessary (to 10.1.14)

	/etc/yum.repos.d/MariaDB.repo

Install with --installroot /opt/mysql

	yum install --installroot /opt/mysql MariaDB-server MariaDB-client

Modify your PATH to include the new location in your .bashrc












https://downloads.mariadb.org/interstitial/mariadb-10.1.14/source/mariadb-10.1.14.tar.gz/from/

http://mirrors.syringanetworks.net/mariadb/mariadb-10.1.14/source/mariadb-10.1.14.tar.gz
https://downloads.mariadb.org/f/mariadb-10.1.14/source/mariadb-10.1.14.tar.gz/from/http%3A//mirrors.syringanetworks.net/mariadb/?serve


http://mirrors.syringanetworks.net/mariadb//mariadb-10.1.14/source/mariadb-10.1.14.tar.gz
http://mirror.jmu.edu/pub/mariadb//mariadb-10.1.14/source/mariadb-10.1.14.tar.gz


yum install gcc gcc-c++ make autoconf binutils cmake
yum install ncurses-devel
wget ...-src.tar.gz
tar -xvzf ...-src.tar.gz
cd ...
./configure (optionally with changes to the baked-in default locations)
or 
cmake .
make && make install



bin-logs

10 minute break (until 4:45 Eastern) then we'll move on to 
Table backend storage types 
and start talking about Backups

Kindle Gift Certificates should have arrived in your email box
Check it out and let me know if it didn't!

Or not... Amazon still has them listed as "Scheduled".
They usually only take about 5 minutes, and I sent them out at lunch.



Single_file = 
File_per_table =

Brewer's Theorem (CAP) - ACID Transactions require CA
	C - Consistency
	A - Availability
	P - Partitioning/Parallelization


For Relational Databases
AriaDB > MyISAM
XtraDB > InnoDB (use XtraDB as your default)

The black dog is barking at me.

Full-Text Search: (Natural Language Processing, bigrams, trigrams)
SphinxSE 
Cassandra - possibly integrating with Lucene (and friends)

NoSQL = SQL (RDBMS), Log (Cassandra), K/V stores (Cass,HBase)
	FullText (Sphinx, Lucene), Graph (Neo4J, OQGraph)
	Doc (MongoDB, CouchDB)

Social Data:
OQGraph - Relationship data (not necessarily relational, or 
	rather super-relational, including qualities and quantities about
	relationships)


See you tomorrow @10am. We'll get started right away with exercises
on table engines and then backups

I'll try to kick those Kindle gift certificates out to you now 
and get you the (fluid, changing) PDF tonight.










